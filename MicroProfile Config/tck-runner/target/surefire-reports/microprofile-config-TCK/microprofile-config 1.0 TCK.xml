<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="ondro-Lenovo-Flex-2-15" name="microprofile-config 1.0 TCK" tests="34" failures="1" timestamp="13 Apr 2017 10:42:30 GMT" time="2.194" errors="0">
  <testcase name="@BeforeClass arquillianBeforeClass" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <failure type="org.jboss.weld.exceptions.DeploymentException" message="WELD-001408: Unsatisfied dependencies for type Config with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private org.eclipse.microprofile.config.tck.ConfigProviderTest.config
  at org.eclipse.microprofile.config.tck.ConfigProviderTest.config(ConfigProviderTest.java:0)
">
      <![CDATA[org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type Config with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private org.eclipse.microprofile.config.tck.ConfigProviderTest.config
  at org.eclipse.microprofile.config.tck.ConfigProviderTest.config(ConfigProviderTest.java:0)

	at org.jboss.weld.bootstrap.Validator.validateInjectionPointForDeploymentProblems(Validator.java:355)
	at org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:277)
	at org.jboss.weld.bootstrap.Validator.validateGeneralBean(Validator.java:130)
	at org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:151)
	at org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:494)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:64)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:55)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </failure>
  </testcase> <!-- @BeforeClass arquillianBeforeClass -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeClass arquillianBeforeClass" time="0.0" classname="org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest">
    <failure type="org.jboss.weld.exceptions.DeploymentException" message="WELD-001408: Unsatisfied dependencies for type Optional&amp;lt;Integer&amp;gt; with qualifiers @ConfigProperty
  at injection point [BackedAnnotatedField] @Inject @ConfigProperty private org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest$OptionalValuesBean.notexistingProperty
  at org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest$OptionalValuesBean.notexistingProperty(OptionalValuesBean.java:0)
">
      <![CDATA[org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type Optional<Integer> with qualifiers @ConfigProperty
  at injection point [BackedAnnotatedField] @Inject @ConfigProperty private org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest$OptionalValuesBean.notexistingProperty
  at org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest$OptionalValuesBean.notexistingProperty(OptionalValuesBean.java:0)

	at org.jboss.weld.bootstrap.Validator.validateInjectionPointForDeploymentProblems(Validator.java:355)
	at org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:277)
	at org.jboss.weld.bootstrap.Validator.validateGeneralBean(Validator.java:130)
	at org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:151)
	at org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:494)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:64)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:55)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </failure>
  </testcase> <!-- @BeforeClass arquillianBeforeClass -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeClass arquillianBeforeClass" time="0.0" classname="org.eclipse.microprofile.config.tck.CustomConfigSourceTest">
    <failure type="org.jboss.weld.exceptions.DeploymentException" message="WELD-001408: Unsatisfied dependencies for type Config with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private org.eclipse.microprofile.config.tck.CustomConfigSourceTest.config
  at org.eclipse.microprofile.config.tck.CustomConfigSourceTest.config(CustomConfigSourceTest.java:0)
">
      <![CDATA[org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type Config with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private org.eclipse.microprofile.config.tck.CustomConfigSourceTest.config
  at org.eclipse.microprofile.config.tck.CustomConfigSourceTest.config(CustomConfigSourceTest.java:0)

	at org.jboss.weld.bootstrap.Validator.validateInjectionPointForDeploymentProblems(Validator.java:355)
	at org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:277)
	at org.jboss.weld.bootstrap.Validator.validateGeneralBean(Validator.java:130)
	at org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:151)
	at org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:494)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:64)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:55)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </failure>
  </testcase> <!-- @BeforeClass arquillianBeforeClass -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.CustomConfigSourceTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeClass arquillianBeforeClass" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <failure type="org.jboss.weld.exceptions.DeploymentException" message="WELD-001408: Unsatisfied dependencies for type Config with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private org.eclipse.microprofile.config.tck.ConverterTest.config
  at org.eclipse.microprofile.config.tck.ConverterTest.config(ConverterTest.java:0)
">
      <![CDATA[org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type Config with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private org.eclipse.microprofile.config.tck.ConverterTest.config
  at org.eclipse.microprofile.config.tck.ConverterTest.config(ConverterTest.java:0)

	at org.jboss.weld.bootstrap.Validator.validateInjectionPointForDeploymentProblems(Validator.java:355)
	at org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:277)
	at org.jboss.weld.bootstrap.Validator.validateGeneralBean(Validator.java:130)
	at org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:151)
	at org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:494)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:64)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:55)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </failure>
  </testcase> <!-- @BeforeClass arquillianBeforeClass -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeClass arquillianBeforeClass" time="0.0" classname="org.eclipse.microprofile.config.tck.CDIPlainInjectionTest">
    <failure type="org.jboss.weld.exceptions.DeploymentException" message="WELD-001408: Unsatisfied dependencies for type Integer with qualifiers @ConfigProperty
  at injection point [BackedAnnotatedField] @Inject @ConfigProperty private org.eclipse.microprofile.config.tck.CDIPlainInjectionTest$SimpleValuesBean.intProperty
  at org.eclipse.microprofile.config.tck.CDIPlainInjectionTest$SimpleValuesBean.intProperty(SimpleValuesBean.java:0)
">
      <![CDATA[org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type Integer with qualifiers @ConfigProperty
  at injection point [BackedAnnotatedField] @Inject @ConfigProperty private org.eclipse.microprofile.config.tck.CDIPlainInjectionTest$SimpleValuesBean.intProperty
  at org.eclipse.microprofile.config.tck.CDIPlainInjectionTest$SimpleValuesBean.intProperty(SimpleValuesBean.java:0)

	at org.jboss.weld.bootstrap.Validator.validateInjectionPointForDeploymentProblems(Validator.java:355)
	at org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:277)
	at org.jboss.weld.bootstrap.Validator.validateGeneralBean(Validator.java:130)
	at org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:151)
	at org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:494)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:64)
	at org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:62)
	at org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:55)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </failure>
  </testcase> <!-- @BeforeClass arquillianBeforeClass -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.CDIPlainInjectionTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="@BeforeMethod arquillianBeforeTest" time="0.0" classname="org.eclipse.microprofile.config.tck.CDIPlainInjectionTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod arquillianBeforeTest -->
  <testcase name="testDynamicValueInPropertyConfigSource" time="0.001" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- testDynamicValueInPropertyConfigSource -->
  <testcase name="testEmptyConfigTreatedAsNotExisting" time="0.001" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- testEmptyConfigTreatedAsNotExisting -->
  <testcase name="testEmptyConfigTreatedAsNotExistingGet" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- testEmptyConfigTreatedAsNotExistingGet -->
  <testcase name="testEnvironmentConfigSource" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- testEnvironmentConfigSource -->
  <testcase name="testGetConfigSources" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- testGetConfigSources -->
  <testcase name="testJavaConfigPropertyFilesConfigSource" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- testJavaConfigPropertyFilesConfigSource -->
  <testcase name="testNonExistingConfigKey" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- testNonExistingConfigKey -->
  <testcase name="testNonExistingConfigKeyGet" time="0.0" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- testNonExistingConfigKeyGet -->
  <testcase name="testPropertyConfigSource" time="0.001" classname="org.eclipse.microprofile.config.tck.ConfigProviderTest">
    <skipped/>
  </testcase> <!-- testPropertyConfigSource -->
  <testcase name="test" time="0.009" classname="org.eclipse.microprofile.config.tck.broken.WrongConverterOnInstanceInjectionTest"/>
  <testcase name="test" time="0.003" classname="org.eclipse.microprofile.config.tck.broken.MissingConverterOnInstanceInjectionTest"/>
  <testcase name="testConfigSourceProvider" time="0.013" classname="org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest">
    <failure type="java.lang.IllegalStateException" message="No ConfigProviderResolver implementation found!">
      <![CDATA[java.lang.IllegalStateException: No ConfigProviderResolver implementation found!
	at org.eclipse.microprofile.config.spi.ConfigProviderResolver.instance(ConfigProviderResolver.java:116)
	at org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest.testConfigSourceProvider(AutoDiscoveredConfigSourceTest.java:57)
	at org.jboss.arquillian.testng.Arquillian$2.invoke(Arquillian.java:173)
	at org.jboss.arquillian.container.test.impl.execution.LocalTestExecuter.execute(LocalTestExecuter.java:60)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:103)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:85)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:143)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:114)
	at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)
	at org.jboss.arquillian.container.test.impl.client.protocol.local.LocalContainerMethodExecutor.invoke(LocalContainerMethodExecutor.java:50)
	at org.jboss.arquillian.container.test.impl.execution.RemoteTestExecuter.execute(RemoteTestExecuter.java:109)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:103)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:85)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:143)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:114)
	at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)
	at org.jboss.arquillian.container.test.impl.execution.ClientTestExecuter.execute(ClientTestExecuter.java:57)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:103)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:85)
	at org.jboss.arquillian.container.test.impl.client.ContainerEventController.createContext(ContainerEventController.java:142)
	at org.jboss.arquillian.container.test.impl.client.ContainerEventController.createTestContext(ContainerEventController.java:129)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:92)
	at org.jboss.arquillian.test.impl.TestContextHandler.createTestContext(TestContextHandler.java:130)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:92)
	at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:92)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:92)
	at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:73)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:92)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:143)
	at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.test(EventTestRunnerAdaptor.java:136)
	at org.jboss.arquillian.testng.Arquillian.run(Arquillian.java:164)
... Removed 57 stack frames]]>
    </failure>
  </testcase> <!-- testConfigSourceProvider -->
  <testcase name="testOptionalInjection" time="0.0" classname="org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest">
    <skipped/>
  </testcase> <!-- testOptionalInjection -->
  <testcase name="test" time="0.007" classname="org.eclipse.microprofile.config.tck.broken.MissingValueOnInstanceInjectionTest"/>
  <testcase name="testConfigSourceProvider" time="0.0" classname="org.eclipse.microprofile.config.tck.CustomConfigSourceTest">
    <skipped/>
  </testcase> <!-- testConfigSourceProvider -->
  <testcase name="testBoolean" time="0.001" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testBoolean -->
  <testcase name="testDouble" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testDouble -->
  <testcase name="testDouble_Broken" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testDouble_Broken -->
  <testcase name="testDuration" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testDuration -->
  <testcase name="testDuration_Broken" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testDuration_Broken -->
  <testcase name="testFloat" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testFloat -->
  <testcase name="testFloat_Broken" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testFloat_Broken -->
  <testcase name="testInteger" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testInteger -->
  <testcase name="testInteger_Broken" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testInteger_Broken -->
  <testcase name="testLocalDate" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testLocalDate -->
  <testcase name="testLocalDateTime" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testLocalDateTime -->
  <testcase name="testLocalDateTime_Broken" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testLocalDateTime_Broken -->
  <testcase name="testLocalDate_Broken" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testLocalDate_Broken -->
  <testcase name="testLocalTime" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testLocalTime -->
  <testcase name="testLocalTime_Broken" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testLocalTime_Broken -->
  <testcase name="testLong" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testLong -->
  <testcase name="testLong_Broken" time="0.0" classname="org.eclipse.microprofile.config.tck.ConverterTest">
    <skipped/>
  </testcase> <!-- testLong_Broken -->
  <testcase name="can_inject_dynamic_values_via_CDI_provider" time="0.0" classname="org.eclipse.microprofile.config.tck.CDIPlainInjectionTest">
    <skipped/>
  </testcase> <!-- can_inject_dynamic_values_via_CDI_provider -->
  <testcase name="can_inject_simple_values_when_defined" time="0.0" classname="org.eclipse.microprofile.config.tck.CDIPlainInjectionTest">
    <skipped/>
  </testcase> <!-- can_inject_simple_values_when_defined -->
</testsuite> <!-- microprofile-config 1.0 TCK -->
